@using ContactDatabase.API.Shared
@using System.Text.Json;
@using System.Text;

@inject HttpClient Http
@inject NavigationManager NavigationManager

<div class="text-center form-title">
    <h2>@(EditMode ? "Edit an existing contact" : "Create a new contact")</h2>
</div>

<br>

<div class="card mb-3 contact-form">
    <div class="card-body">
        <EditForm Model="Contact" OnSubmit="HandleFormSubmit">
            <div class="container">
                <div class="row">
                    <div class="col mb-3">
                        <label for="firstNameInput" class="form-label">First Name</label>
                        <InputText id="firstNameInput" class="form-control" @bind-Value=Contact.FirstName />
                    </div>
                    <div class="col mb-3">
                        <label for="lastNameInput" class="form-label">Last Name</label>
                        <InputText id="lastNameInput" class="form-control" @bind-Value=Contact.LastName />
                    </div>
                </div>
                <div class="row">
                    <div class="col mb-3">
                        <label for="emailInput" class="form-label">Email</label>
                        <InputText id="emailInput" class="form-control" @bind-Value=Contact.Email type="email" />
                    </div>
                    <div class="col mb-3">
                        <label for="titleInput" class="form-label">Title</label>
                        <InputSelect class="form-select" id="titleInput" @bind-Value=Contact.Title>
                            <option value="Mr." selected="@((Contact.Title == "Mr.") ? true : false)">Mr.</option>
                            <option value="Mrs." selected="@((Contact.Title == "Mrs.") ? true : false)">Mrs.</option>
                            <option value="Miss" selected="@((Contact.Title == "Miss") ? true : false)">Miss</option>
                            <option value="Ms." selected="@((Contact.Title == "Ms.") ? true : false)">Ms.</option>
                        </InputSelect>
                    </div>
                </div>
                <div class="row">
                    <div class="col mb-3">
                        <label for="descriptionInput" class="form-label">Description</label>
                        <textarea class="form-control" id="descriptionInput" rows="3" @bind=Contact.Description>@Contact.Description</textarea>
                    </div>
                </div>
                <div class="row">
                    <div class="col mb-3">
                        <label for="birthDateInput" class="form-label">Date Of Birth</label>
                        <InputDate id="birthDateInput" class="form-control" @bind-Value=Contact.DateOfBirth />
                    </div>
                    <div class="col mb-3">
                        <label for="maritalStatusInput" class="form-label">Married</label>
                        <InputSelect class="form-select" id="maritalStatusInput" @bind-Value=Contact.MarriageStatus>
                            <option value="false" selected="@Contact.MarriageStatus">No</option>
                            <option value="true" selected="@Contact.MarriageStatus">Yes</option>
                        </InputSelect>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <div class="text-danger error-msg">@ErrorMessage</div>
                        <button type="submit" class="btn btn-primary">@(EditMode ? "Edit Contact" : "Add Contact")</button>
                    </div>
                </div>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [Parameter]
    public Contact? Contact { get; set; }
    [Parameter]
    public bool EditMode { get; set; }
    private string ErrorMessage { get; set; } = "";

    private async Task HandleFormSubmit()
    {
        if (EditMode)
        {
            var json = JsonSerializer.Serialize(Contact);
            var content = new StringContent(json, Encoding.UTF8, "application/json");
            var response = await Http.PostAsync("/contact/edit-contact", content);

            if (response.IsSuccessStatusCode)
                NavigationManager.NavigateTo("/");
            else
                ErrorMessage = "Failed to update the contact. Try again later.";
        }
        else
        {
            var json = JsonSerializer.Serialize(Contact);
            var content = new StringContent(json, Encoding.UTF8, "application/json");
            var response = await Http.PostAsync("/contact/add-contact", content);

            if (response.IsSuccessStatusCode)
                NavigationManager.NavigateTo("/");
            else
                ErrorMessage = "All fields are required.";
        }
    }
}